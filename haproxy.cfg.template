###############################################################################
# haproxy.cfg.template
#
# This template is processed by envsubst in start.sh to replace variables:
#   HP_EXAPPS_ADDRESS,
#   HP_EXAPPS_HTTPS_ADDRESS,
#   HP_CONTROL_ADDRESS,
#   HP_CONTROL_HTTPS_ADDRESS,
#   HP_TIMEOUT_CONNECT,
#   HP_TIMEOUT_CLIENT,
#   HP_TIMEOUT_SERVER,
#   NC_INSTANCE_URL,
#   NC_HAPROXY_SHARED_KEY
#
# If /certs/cert.pem is not found, lines containing "_HTTPS_FRONTEND_" are
# commented out automatically in start.sh.
###############################################################################

global
    log stdout local0 debug
    maxconn 8192
    ca-base /etc/ssl/certs

defaults
    log global
    option httplog
    option dontlognull
    timeout connect ${HP_TIMEOUT_CONNECT}
    timeout client ${HP_TIMEOUT_CLIENT}
    timeout server ${HP_TIMEOUT_SERVER}

###############################################################################
# Basic Auth for nextcloud_control frontend
###############################################################################
userlist nextcloud_control_auth
    user app_api_harp insecure-password ${NC_HAPROXY_SHARED_KEY}

###############################################################################
# FRONTEND: ex_apps (HTTP)
###############################################################################
frontend ex_apps
    mode http
    bind ${HP_EXAPPS_ADDRESS}

    filter spoe engine exapps-spoe config /etc/haproxy/spoe-agent.conf
    http-request silent-drop if { var(txn.blacklist.good) -m int eq 0 }

    # Track IP in bk_harp_bruteforce (sc0)
    http-request track-sc0 src table bk_harp_bruteforce

    # Define ACLs to check stick table conditions
    acl has_excessive_attempts sc0_http_req_rate gt 5

    # If IP has more than 5 failing attempts in 5 min, silent-drop
    http-request silent-drop if has_excessive_attempts

    default_backend ex_apps_backend

backend ex_apps_backend
    mode http
    server ex_apps_placeholder 127.0.0.1:9000

###############################################################################
# FRONTEND: ex_apps_https (only enabled if /certs/cert.pem exists)
###############################################################################
_HTTPS_FRONTEND_ frontend ex_apps_https
_HTTPS_FRONTEND_     mode http
_HTTPS_FRONTEND_     bind ${HP_EXAPPS_HTTPS_ADDRESS} ssl crt /certs/cert.pem

_HTTPS_FRONTEND_     filter spoe engine exapps-spoe config /etc/haproxy/spoe-agent.conf
_HTTPS_FRONTEND_     http-request silent-drop if { var(txn.blacklist.good) -m int eq 0 }

_HTTPS_FRONTEND_     # Track IP in bk_harp_bruteforce (sc0)
_HTTPS_FRONTEND_     http-request track-sc0 src table bk_harp_bruteforce

_HTTPS_FRONTEND_     # Define ACLs to check stick table conditions
_HTTPS_FRONTEND_     acl has_excessive_attempts sc0_http_req_rate gt 5

_HTTPS_FRONTEND_     # If IP has more than 5 failing attempts in 5 min, silent-drop
_HTTPS_FRONTEND_     http-request silent-drop if has_excessive_attempts

_HTTPS_FRONTEND_     default_backend ex_apps_backend

###############################################################################
# FRONTEND: nextcloud_control (HTTP)
###############################################################################
frontend nextcloud_control
    mode http
    bind ${HP_CONTROL_ADDRESS}

    filter spoe engine blacklist-spoe config /etc/haproxy/spoe-agent.conf
    http-request silent-drop if { var(txn.blacklist.good) -m int eq 0 }

    # Perform Basic Auth
    acl valid_credentials http_auth(nextcloud_control_auth)

    # Track IP in bk_harp_bruteforce (sc0)
    http-request track-sc0 src table bk_harp_bruteforce if ! valid_credentials
    http-request sc-inc-gpc0(0) if ! valid_credentials

    # Define ACLs to check stick table conditions
    acl has_excessive_attempts sc0_http_req_rate gt 5

    # If IP has more than 5 failing attempts in 5 min, silent-drop
    http-request silent-drop if has_excessive_attempts

    http-request auth realm NextcloudControl unless valid_credentials

    http-request allow
    use_backend dataplane_backend

backend dataplane_backend
    mode http
    server dataplane 127.0.0.1:8200

###############################################################################
# FRONTEND: nextcloud_control_https (only enabled if /certs/cert.pem exists)
###############################################################################
_HTTPS_FRONTEND_ frontend nextcloud_control_https
_HTTPS_FRONTEND_     mode http
_HTTPS_FRONTEND_     bind ${HP_CONTROL_HTTPS_ADDRESS} ssl crt /certs/cert.pem

_HTTPS_FRONTEND_     filter spoe engine blacklist-spoe config /etc/haproxy/spoe-agent.conf
_HTTPS_FRONTEND_     http-request silent-drop if { var(txn.blacklist.good) -m int eq 0 }

_HTTPS_FRONTEND_     # Perform Basic Auth
_HTTPS_FRONTEND_     acl valid_credentials http_auth(nextcloud_control_auth)

_HTTPS_FRONTEND_     # Track IP in bk_harp_bruteforce (sc0)
_HTTPS_FRONTEND_     http-request track-sc0 src table bk_harp_bruteforce if ! valid_credentials
_HTTPS_FRONTEND_     http-request sc-inc-gpc0(0) if ! valid_credentials

_HTTPS_FRONTEND_     # Define ACLs to check stick table conditions
_HTTPS_FRONTEND_     acl has_excessive_attempts sc0_http_req_rate gt 5

_HTTPS_FRONTEND_     # If IP has more than 5 failing attempts in 5 min, silent-drop
_HTTPS_FRONTEND_     http-request silent-drop if has_excessive_attempts

_HTTPS_FRONTEND_     http-request auth realm NextcloudControl unless valid_credentials

_HTTPS_FRONTEND_     http-request allow
_HTTPS_FRONTEND_     use_backend dataplane_backend

###############################################################################
# These backend is used only for global stick-table definition..
###############################################################################

backend bk_harp_bruteforce
    # This table is managed by HaProxy or externally to count failing attempts.
    # If sc0_http_req_rate (for HTTP) greater then 5 in 5 minutes we drop the request.
    stick-table type ip size 1m expire 144m store gpc0,http_req_rate(5m)


backend agents
    mode tcp
    timeout connect 5s
    timeout server  3m
    option spop-check
    server agent1 127.0.0.1:9600 check
